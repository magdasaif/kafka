version: '3'
services:
    # kafka_producer_php:
    #     image: anamhossain/php-kafka:latest
    #     volumes:
    #     - ./:/var/www/
    #     environment:
    #         DB_CONNECTION: mysql
    #         DB_HOST: kafka_producer_mysql_db
    #         DB_PORT: 3306
    #         KAFKA_BROKERS: kafka:9092
    #     # networks:
    #     # - default
    #     # - proxynet

    # kafka_producer_nginx:
    #     image: anamhossain/php-nginx:latest
    #     environment:
    #         NGINX_ROOT: "/var/www/public"
    #         NGINX_FPM_HOST: kafka_producer_php
    #     ports:
    #     - 8700:80
    #     depends_on:
    #     - kafka_producer_php
    #     - zookeeper
    #     - kafka
    #     # networks:
    #     # - default
    #     # - proxynet

    # kafka_producer_mysql_db:
    #     image: mysql:5
    #     restart: always
    #     environment:
    #         MYSQL_DATABASE: laravel
    #         MYSQL_ROOT_PASSWORD: E8UQxEFic
    #         MYSQL_USER: laravel
    #         MYSQL_PASSWORD: laravel
    #     ports:
    #     - "3404:3306"
    #     volumes:
    #     - "./storage/db-data:/var/lib/mysql"


    producer:
        container_name: producer
        build:
            context: .
            dockerfile: ./docker/Dockerfile
        entrypoint: sh -c " php-fpm"
        restart: unless-stopped
        volumes:
            - ./:/var/www/
        environment:
            - APP_ENV=local
            - APP_KEY=base64:7t3iJGYKu1jqjeEQixGEL8mXwCr6XgVRmd6ryRII3Jo=
            - APP_DEBUG=true
            - DB_CONNECTION=mysql
            - DB_HOST=mysql
            - DB_PORT=3306
            - MYSQL_ROOT_PASSWORD=qeD54Rumrt9OSUhaER5I1nTzeF0v2jX6ZKdEyOjehO8tCT2Yk6wxuayrdb3rd8e5rI5sV5i8HkAr3CqOJl1qpIWbLnLweznl7A5BqsdG2QnZWR3xbKBKKpN3xnTeJye2
            - KAFKA_BROKERS=kafka:9092
        networks:
            - default

    api:
        container_name: producer-api
        image: nginx:1.23
        volumes:
        - ./:/var/www/
        - ./docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
        - 8011:80
        depends_on:
        - producer
        - kafka
        networks:
            - default

    zookeeper:
        image: confluentinc/cp-zookeeper:6.2.0
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:6.2.0
        hostname: kafka
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - "29092:29092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            CONFLUENT_METRICS_ENABLE: 'false'
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1

    schema-registry:
        image: confluentinc/cp-schema-registry:6.2.0
        hostname: schema-registry
        container_name: schema-registry
        depends_on:
            - zookeeper
            - kafka
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'

    mysql:
        image: debezium/example-mysql:1.2
        container_name: mysql
        ports:
            - 3307:3306
        environment:
            - MYSQL_ROOT_PASSWORD=debezium
            - MYSQL_USER=mysqluser
            - MYSQL_PASSWORD=mysqlpw
        volumes:
            - ${PWD}/data/movies.sql:/docker-entrypoint-initdb.d/z99_dump.sql

    connect-debezium:
        image: debezium/connect:1.6
        container_name: connect-debezium
        depends_on:
            - kafka
            - mysql
            - schema-registry
        ports:
            - 8083:8083
        environment:
            BOOTSTRAP_SERVERS: kafka:9092
            GROUP_ID: connect-debezium
            CONFIG_STORAGE_TOPIC: docker-connect-debezium-configs
            OFFSET_STORAGE_TOPIC: docker-connect-debezium-offsets
            STATUS_STORAGE_TOPIC: docker-connect-debezium-status
            KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
            VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        volumes:
            - ${PWD}/scripts:/scripts

    kafka-manager:
        image: hlebalbau/kafka-manager:latest
        container_name: kafka-manager
        depends_on:
            - kafka
        ports:
            - "9000:9000"
        environment:
            - ZK_HOSTS=zookeeper:2181
            - APPLICATION_SECRET=letmein